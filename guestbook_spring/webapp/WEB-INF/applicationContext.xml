<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">
		
	<context:annotation-config/>
	
	<context:component-scan base-package="guestbook_sping">
	
        <!--DAO저장소 스캐닝-->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
        <!--서비스스캐닝-->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <!--컴포넌트 스캐닝-->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
	</context:component-scan>
	
	<!--Oracle DataSource를 bean으로 등록-->
    <bean id="oracleDatasource" class="oracle.jdbc.pool.OracleDataSource" destroy-method="close">
        <property name="URL" value="jdbc:oracle:thin:@Localhost:1521:xe"/>
        <property name="user" value="jblog"/>
        <property name="password" value="jblog"/>
        <property name="connectionCachingEnabled" value="true"/>
        <qualifier value="main-db"/>
    </bean>


    <!--MyBatis SqlSessionFactory Bean-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="oracleDatasource"/><!--세터호출-->
        <property name="configLocation" value="classpath:mybatis/configuration.xml"/>
    </bean>


    <!--MyBatis SqlSessionTemplate-->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>




</beans>
